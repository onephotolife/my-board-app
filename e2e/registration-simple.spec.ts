import { test, expect } from '@playwright/test';

test.describe('„É¶„Éº„Ç∂„ÉºÁôªÈå≤„Éï„É≠„Éº - Âü∫Êú¨„ÉÜ„Çπ„Éà', () => {
  test('ÁôªÈå≤„Éö„Éº„Ç∏„ÅåÊ≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Çã', async ({ page }) => {
    // ÁôªÈå≤„Éö„Éº„Ç∏„Å∏„Ç¢„ÇØ„Çª„Çπ
    await page.goto('/auth/signup');
    
    // „Éö„Éº„Ç∏„Çø„Ç§„Éà„É´„ÅÆÁ¢∫Ë™ç
    await expect(page.locator('h1')).toContainText('Êñ∞Ë¶èÁôªÈå≤');
    
    // ÂøÖÈ†à„Éï„Ç£„Éº„É´„Éâ„ÅÆÂ≠òÂú®Á¢∫Ë™ç
    await expect(page.locator('input[name="name"]')).toBeVisible();
    await expect(page.locator('input[name="email"]')).toBeVisible();
    await expect(page.locator('input[name="password"]')).toBeVisible();
    await expect(page.locator('input[name="confirmPassword"]')).toBeVisible();
    await expect(page.locator('button[type="submit"]')).toBeVisible();
  });

  test('„Éï„Ç©„Éº„É†„Éê„É™„Éá„Éº„Ç∑„Éß„É≥ - Á©∫„ÅÆ„Éï„Ç£„Éº„É´„Éâ', async ({ page }) => {
    await page.goto('/auth/signup');
    
    // Á©∫„ÅÆ„Åæ„ÅæÈÄÅ‰ø°„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    await page.click('button[type="submit"]');
    
    // „Éñ„É©„Ç¶„Ç∂„ÅÆHTML5„Éê„É™„Éá„Éº„Ç∑„Éß„É≥„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÁ¢∫Ë™ç
    const nameInput = page.locator('input[name="name"]');
    const nameValidity = await nameInput.evaluate((el: HTMLInputElement) => el.validationMessage);
    expect(nameValidity).toBeTruthy();
  });

  test('Ê≠£Â∏∏„Å™ÁôªÈå≤„Éï„É≠„Éº', async ({ page }) => {
    await page.goto('/auth/signup');
    
    const timestamp = Date.now();
    const testEmail = `test-${timestamp}@example.com`;
    
    // „Éï„Ç©„Éº„É†„Å´ÂÖ•Âäõ
    await page.fill('input[name="name"]', '„ÉÜ„Çπ„Éà„É¶„Éº„Ç∂„Éº');
    await page.fill('input[name="email"]', testEmail);
    await page.fill('input[name="password"]', 'Test123!Pass');
    await page.fill('input[name="confirmPassword"]', 'Test123!Pass');
    
    // „Éë„Çπ„ÉØ„Éº„Éâ‰∏ÄËá¥Á¢∫Ë™ç„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂæÖ„Å§
    await expect(page.locator('text=„Éë„Çπ„ÉØ„Éº„Éâ„Åå‰∏ÄËá¥„Åó„Å¶„ÅÑ„Åæ„Åô')).toBeVisible();
    
    // ÈÄÅ‰ø°
    await page.click('button[type="submit"]');
    
    // ÊàêÂäü„É°„ÉÉ„Çª„Éº„Ç∏„Åæ„Åü„ÅØ„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂæÖ„Å§ÔºàÊúÄÂ§ß10ÁßíÔºâ
    await page.waitForSelector('text=/ÁôªÈå≤„ÅåÂÆå‰∫Ü„Åó„Åæ„Åó„Åü|„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü/', { timeout: 10000 });
  });

  test('„Éë„Çπ„ÉØ„Éº„ÉâÂº∑Â∫¶„Ç§„É≥„Ç∏„Ç±„Éº„Çø„ÅÆÂãï‰Ωú', async ({ page }) => {
    await page.goto('/auth/signup');
    
    // Âº±„ÅÑ„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ
    await page.fill('input[name="password"]', 'weak');
    
    // PasswordStrengthIndicator„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆÂ≠òÂú®„ÇíÁ¢∫Ë™çÔºàÂÆüË£Ö„Å´‰æùÂ≠òÔºâ
    const strengthIndicator = page.locator('[data-testid="password-strength"], .password-strength');
    const indicatorCount = await strengthIndicator.count();
    
    if (indicatorCount > 0) {
      // Âº±„ÅÑ„Éë„Çπ„ÉØ„Éº„Éâ„ÅÆÂ†¥Âêà„ÅÆË°®Á§∫„ÇíÁ¢∫Ë™ç
      await expect(strengthIndicator.first()).toBeVisible();
    }
    
    // Âº∑„ÅÑ„Éë„Çπ„ÉØ„Éº„Éâ„Å´Â§âÊõ¥
    await page.fill('input[name="password"]', 'SuperSecure123!@#Pass');
    
    if (indicatorCount > 0) {
      // Âº∑„ÅÑ„Éë„Çπ„ÉØ„Éº„Éâ„ÅÆÂ†¥Âêà„ÅÆË°®Á§∫„ÇíÁ¢∫Ë™ç
      await expect(strengthIndicator.first()).toBeVisible();
    }
  });

  test('„Éë„Çπ„ÉØ„Éº„ÉâË°®Á§∫/ÈùûË°®Á§∫„Éà„Ç∞„É´', async ({ page }) => {
    await page.goto('/auth/signup');
    
    const passwordInput = page.locator('input[name="password"]');
    const toggleButton = page.locator('button').filter({ hasText: /üëÅÔ∏è/ }).first();
    
    // ÂàùÊúüÁä∂ÊÖã„ÅØpassword type
    await expect(passwordInput).toHaveAttribute('type', 'password');
    
    // „Éà„Ç∞„É´„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    await toggleButton.click();
    
    // text type„Å´Â§âÊõ¥„Åï„Çå„Åü„ÅãÁ¢∫Ë™ç
    await expect(passwordInput).toHaveAttribute('type', 'text');
    
    // ÂÜçÂ∫¶„ÇØ„É™„ÉÉ„ÇØ„Åó„Å¶Êàª„Åô
    await toggleButton.click();
    await expect(passwordInput).toHaveAttribute('type', 'password');
  });

  test('„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÅÆÂΩ¢Âºè„ÉÅ„Çß„ÉÉ„ÇØ', async ({ page }) => {
    await page.goto('/auth/signup');
    
    // ÁÑ°Âäπ„Å™„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ„ÇíÂÖ•Âäõ
    await page.fill('input[name="email"]', 'invalid-email');
    await page.click('input[name="password"]'); // „Éï„Ç©„Éº„Ç´„Çπ„ÇíÂ§ñ„Åô
    
    await page.waitForTimeout(500); // „Éê„É™„Éá„Éº„Ç∑„Éß„É≥ÂæÖÊ©ü
    
    // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÁ¢∫Ë™ç
    const emailError = page.locator('text=/ÊúâÂäπ„Å™„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ/');
    const errorCount = await emailError.count();
    
    if (errorCount > 0) {
      await expect(emailError.first()).toBeVisible();
    }
  });

  test('„Éë„Çπ„ÉØ„Éº„ÉâÁ¢∫Ë™ç„ÅÆ‰∏ÄËá¥„ÉÅ„Çß„ÉÉ„ÇØ', async ({ page }) => {
    await page.goto('/auth/signup');
    
    // „Éë„Çπ„ÉØ„Éº„Éâ„ÇíÂÖ•Âäõ
    await page.fill('input[name="password"]', 'Test123!Pass');
    
    // Áï∞„Å™„Çã„Éë„Çπ„ÉØ„Éº„Éâ„ÇíÁ¢∫Ë™ç„Éï„Ç£„Éº„É´„Éâ„Å´ÂÖ•Âäõ
    await page.fill('input[name="confirmPassword"]', 'Different123!');
    await page.click('input[name="email"]'); // „Éï„Ç©„Éº„Ç´„Çπ„ÇíÂ§ñ„Åô
    
    await page.waitForTimeout(500); // „Éê„É™„Éá„Éº„Ç∑„Éß„É≥ÂæÖÊ©ü
    
    // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÁ¢∫Ë™ç
    const mismatchError = page.locator('text=„Éë„Çπ„ÉØ„Éº„Éâ„Åå‰∏ÄËá¥„Åó„Åæ„Åõ„Çì');
    const errorCount = await mismatchError.count();
    
    if (errorCount > 0) {
      await expect(mismatchError).toBeVisible();
    }
    
    // Ê≠£„Åó„ÅÑ„Éë„Çπ„ÉØ„Éº„Éâ„Å´‰øÆÊ≠£
    await page.fill('input[name="confirmPassword"]', 'Test123!Pass');
    
    // ‰∏ÄËá¥Á¢∫Ë™ç„É°„ÉÉ„Çª„Éº„Ç∏
    await expect(page.locator('text=„Éë„Çπ„ÉØ„Éº„Éâ„Åå‰∏ÄËá¥„Åó„Å¶„ÅÑ„Åæ„Åô')).toBeVisible();
  });

  test('Áü≠„ÅÑÂêçÂâç„ÅÆ„Éê„É™„Éá„Éº„Ç∑„Éß„É≥', async ({ page }) => {
    await page.goto('/auth/signup');
    
    // 1ÊñáÂ≠ó„ÅÆÂêçÂâç„ÇíÂÖ•Âäõ
    await page.fill('input[name="name"]', 'A');
    await page.click('input[name="email"]'); // „Éï„Ç©„Éº„Ç´„Çπ„ÇíÂ§ñ„Åô
    
    await page.waitForTimeout(500); // „Éê„É™„Éá„Éº„Ç∑„Éß„É≥ÂæÖÊ©ü
    
    // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÁ¢∫Ë™ç
    const nameError = page.locator('text=/2ÊñáÂ≠ó‰ª•‰∏ä/');
    const errorCount = await nameError.count();
    
    if (errorCount > 0) {
      await expect(nameError).toBeVisible();
    }
  });
});

test.describe('„É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥', () => {
  test('„É¢„Éê„Ç§„É´Ë°®Á§∫', async ({ page }) => {
    await page.setViewportSize({ width: 375, height: 667 });
    await page.goto('/auth/signup');
    
    // ‰∏ªË¶ÅË¶ÅÁ¥†„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Çã„ÅãÁ¢∫Ë™ç
    await expect(page.locator('h1')).toContainText('Êñ∞Ë¶èÁôªÈå≤');
    await expect(page.locator('input[name="name"]')).toBeVisible();
    await expect(page.locator('input[name="email"]')).toBeVisible();
    await expect(page.locator('input[name="password"]')).toBeVisible();
    await expect(page.locator('button[type="submit"]')).toBeVisible();
  });

  test('„Çø„Éñ„É¨„ÉÉ„ÉàË°®Á§∫', async ({ page }) => {
    await page.setViewportSize({ width: 768, height: 1024 });
    await page.goto('/auth/signup');
    
    await expect(page.locator('h1')).toContainText('Êñ∞Ë¶èÁôªÈå≤');
    await expect(page.locator('form')).toBeVisible();
  });

  test('„Éá„Çπ„ÇØ„Éà„ÉÉ„ÉóË°®Á§∫', async ({ page }) => {
    await page.setViewportSize({ width: 1920, height: 1080 });
    await page.goto('/auth/signup');
    
    await expect(page.locator('h1')).toContainText('Êñ∞Ë¶èÁôªÈå≤');
    await expect(page.locator('form')).toBeVisible();
  });
});