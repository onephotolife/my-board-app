name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  MONGODB_VERSION: '7.0'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup environment
        run: |
          cp .env.example .env
          echo "MONGODB_URI=mongodb://localhost:27017/test-db" >> .env
          echo "NEXTAUTH_URL=http://localhost:3000" >> .env
          echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
          echo "AUTH_EMAIL=${{ secrets.AUTH_EMAIL }}" >> .env
          echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> .env

      - name: Build application
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run auth setup
        run: npx playwright test tests/auth.setup.ts
        env:
          CI: true

      - name: Run E2E tests
        run: |
          npx playwright test \
            --project=chromium \
            --reporter=line,html,junit,json \
            --output=./test-results
        env:
          CI: true
      - name: Run tags toggles regression
        run: |
          E2E_MOCK_AUTH=1 NEXT_PUBLIC_TAG_DEBUG=true npx playwright test \
            -c playwright-e2e.config.ts \
            --project=authenticated \
            tests/e2e/tags.toggles.all-variants.spec.ts \
            --reporter=line,html,junit \
            --output=./test-results-tags
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: |
            playwright-report/
            test-results/
            test-results-tags/

      - name: Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: test-results/**/*.webm

      - name: Generate test summary
        if: always()
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f test-results/results.json ]; then
            echo "```json" >> $GITHUB_STEP_SUMMARY
            cat test-results/results.json | jq '.stats' >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
          fi

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      - run: npm run type-check || npx tsc --noEmit
