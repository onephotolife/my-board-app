#!/usr/bin/env node

/**
 * Playwright E2E„ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„ÉàÔºà„Éñ„É©„Ç¶„Ç∂„Éô„Éº„ÇπÔºâ
 * 20‰∫∫Â§©Êâç„Ç®„É≥„Ç∏„Éã„Ç¢‰ºöË≠∞„Å´„Çà„ÇãÂÆüË£Ö
 */

const { chromium } = require('playwright');

const BASE_URL = 'http://localhost:3000';

// „Ç´„É©„ÉºÂá∫Âäõ
const colors = {
  reset: '\x1b[0m',
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m',
  magenta: '\x1b[35m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

// „ÉÜ„Çπ„ÉàÁµêÊûú
const results = {
  passed: 0,
  failed: 0,
  tests: []
};

async function runTest(name, testFn) {
  log(`\nüìù ${name}`, 'cyan');
  try {
    const startTime = Date.now();
    await testFn();
    const duration = Date.now() - startTime;
    log(`  ‚úÖ PASS (${duration}ms)`, 'green');
    results.passed++;
    results.tests.push({ name, status: 'passed', duration });
  } catch (error) {
    log(`  ‚ùå FAIL: ${error.message}`, 'red');
    results.failed++;
    results.tests.push({ name, status: 'failed', error: error.message });
  }
}

async function main() {
  console.log('\n' + '='.repeat(60));
  log('üöÄ Playwright E2E„ÉÜ„Çπ„ÉàÈñãÂßã', 'cyan');
  console.log('='.repeat(60));

  const browser = await chromium.launch({ 
    headless: true // „Éò„ÉÉ„Éâ„É¨„Çπ„É¢„Éº„Éâ„ÅßÂÆüË°å
  });
  
  const context = await browser.newContext();
  const page = await context.newPage();

  try {
    // TEST 1: „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏Ë°®Á§∫
    await runTest('TEST-1: „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏Ë°®Á§∫', async () => {
      await page.goto(`${BASE_URL}/auth/signin`);
      const title = await page.title();
      if (!title.includes('‰ºöÂì°Âà∂Êé≤Á§∫Êùø')) {
        throw new Error('„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„ÅåÊ≠£„Åó„ÅèË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
    });

    // TEST 2: Ê≠£Â∏∏„Å™„É≠„Ç∞„Ç§„É≥
    await runTest('TEST-2: Ê≠£Â∏∏„Å™„É≠„Ç∞„Ç§„É≥', async () => {
      await page.goto(`${BASE_URL}/auth/signin`);
      
      // „Éï„Ç©„Éº„É†ÂÖ•Âäõ
      await page.fill('input[name="email"]', 'verified@test.com');
      await page.fill('input[name="password"]', 'Test123!');
      
      // „É≠„Ç∞„Ç§„É≥„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ
      await Promise.all([
        page.waitForNavigation(),
        page.click('button[type="submit"]')
      ]);
      
      // „ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ„Å∏„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàÁ¢∫Ë™ç
      const url = page.url();
      if (!url.includes('/dashboard')) {
        throw new Error(`ÊúüÂæÖ„Åï„Çå„Çã„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„ÅåÁô∫Áîü„Åó„Åæ„Åõ„Çì„Åß„Åó„Åü: ${url}`);
      }
      
      // „Çª„ÉÉ„Ç∑„Éß„É≥Á¢∫Ë™ç
      const cookies = await context.cookies();
      const sessionCookie = cookies.find(c => c.name.includes('session-token'));
      if (!sessionCookie) {
        throw new Error('„Çª„ÉÉ„Ç∑„Éß„É≥„Éà„Éº„ÇØ„É≥„Åå‰ΩúÊàê„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
      
      log(`    Session Cookie: ${sessionCookie.name}`, 'blue');
    });

    // TEST 3: „Éò„ÉÉ„ÉÄ„ÉºË°®Á§∫Á¢∫Ë™ç
    await runTest('TEST-3: „É≠„Ç∞„Ç§„É≥Âæå„ÅÆ„Éò„ÉÉ„ÉÄ„ÉºË°®Á§∫', async () => {
      await page.goto(BASE_URL);
      
      // „É¶„Éº„Ç∂„ÉºÂêçË°®Á§∫Á¢∫Ë™ç
      const userInfo = await page.textContent('header');
      if (!userInfo || !userInfo.includes('Verified User')) {
        log('    ‚ö†Ô∏è  „É¶„Éº„Ç∂„ÉºÂêç„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß', 'yellow');
      }
      
      // „Ç¢„Éê„Çø„ÉºË°®Á§∫Á¢∫Ë™ç
      const avatar = await page.$('header .MuiAvatar-root');
      if (!avatar) {
        throw new Error('„Ç¢„Éê„Çø„Éº„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
    });

    // TEST 4: „É≠„Ç∞„Ç¢„Ç¶„Éà
    await runTest('TEST-4: „É≠„Ç∞„Ç¢„Ç¶„ÉàÂá¶ÁêÜ', async () => {
      // „É°„Éã„É•„Éº„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ
      await page.click('[data-testid="menu-button"]');
      
      // „Éâ„É≠„ÉØ„Éº„ÅåÈñã„Åè„ÅÆ„ÇíÂæÖ„Å§
      await page.waitForSelector('.MuiDrawer-root', { state: 'visible' });
      
      // „É≠„Ç∞„Ç¢„Ç¶„Éà„Éú„Çø„É≥„ÇØ„É™„ÉÉ„ÇØ
      await Promise.all([
        page.waitForNavigation(),
        page.click('button:has-text("„É≠„Ç∞„Ç¢„Ç¶„Éà")')
      ]);
      
      // „Éà„ÉÉ„Éó„Éö„Éº„Ç∏„Å∏„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàÁ¢∫Ë™ç
      const url = page.url();
      if (!url.endsWith('/')) {
        log(`    ‚ö†Ô∏è  „Éà„ÉÉ„Éó„Éö„Éº„Ç∏‰ª•Â§ñ„Å´„É™„ÉÄ„Ç§„É¨„ÇØ„Éà: ${url}`, 'yellow');
      }
      
      // „Çª„ÉÉ„Ç∑„Éß„É≥ÂâäÈô§Á¢∫Ë™ç
      const cookies = await context.cookies();
      const sessionCookie = cookies.find(c => c.name.includes('session-token'));
      if (sessionCookie && sessionCookie.value) {
        throw new Error('„Çª„ÉÉ„Ç∑„Éß„É≥„ÅåÂâäÈô§„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
    });

    // TEST 5: ÈñìÈÅï„Å£„Åü„Éë„Çπ„ÉØ„Éº„Éâ
    await runTest('TEST-5: ÈñìÈÅï„Å£„Åü„Éë„Çπ„ÉØ„Éº„Éâ', async () => {
      await page.goto(`${BASE_URL}/auth/signin`);
      
      await page.fill('input[name="email"]', 'verified@test.com');
      await page.fill('input[name="password"]', 'WrongPassword!');
      
      await page.click('button[type="submit"]');
      
      // „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏ÂæÖÊ©ü
      await page.waitForTimeout(1000);
      
      // „Ç®„É©„ÉºË°®Á§∫Á¢∫Ë™ç
      const errorText = await page.textContent('body');
      if (!errorText?.includes('ÈñìÈÅï„Å£„Å¶') && !errorText?.includes('„Ç®„É©„Éº')) {
        log('    ‚ö†Ô∏è  „Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅåË°®Á§∫„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂèØËÉΩÊÄß', 'yellow');
      }
      
      // „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å´Áïô„Åæ„Çã„Åì„Å®„ÇíÁ¢∫Ë™ç
      const url = page.url();
      if (!url.includes('/auth/signin')) {
        throw new Error('„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å´Áïô„Åæ„Å£„Å¶„ÅÑ„Åæ„Åõ„Çì');
      }
    });

    // TEST 6: Êú™Á¢∫Ë™ç„É°„Éº„É´
    await runTest('TEST-6: Êú™Á¢∫Ë™ç„É°„Éº„É´„Ç¢„Éâ„É¨„Çπ', async () => {
      await page.goto(`${BASE_URL}/auth/signin`);
      
      await page.fill('input[name="email"]', 'unverified@test.com');
      await page.fill('input[name="password"]', 'Test123!');
      
      await page.click('button[type="submit"]');
      
      // „Ç®„É©„Éº„Åæ„Åü„ÅØ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàÂæÖÊ©ü
      await page.waitForTimeout(2000);
      
      // „É°„Éº„É´Á¢∫Ë™ç„Éö„Éº„Ç∏„Å∏„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàÁ¢∫Ë™ç
      const url = page.url();
      if (url.includes('/dashboard')) {
        throw new Error('Êú™Á¢∫Ë™ç„É°„Éº„É´„Åß„É≠„Ç∞„Ç§„É≥„Åß„Åç„Å¶„Åó„Åæ„Å£„Åü');
      }
    });

    // TEST 7: ‰øùË≠∑„Åï„Çå„Åü„Éö„Éº„Ç∏„Å∏„ÅÆ„Ç¢„ÇØ„Çª„Çπ
    await runTest('TEST-7: Êú™Ë™çË®º„Åß„ÅÆ‰øùË≠∑„Éö„Éº„Ç∏„Ç¢„ÇØ„Çª„Çπ', async () => {
      // Êñ∞„Åó„ÅÑ„Ç≥„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅßÈñãÂßãÔºàÊú™Ë™çË®ºÁä∂ÊÖãÔºâ
      const newContext = await browser.newContext();
      const newPage = await newContext.newPage();
      
      await newPage.goto(`${BASE_URL}/dashboard`);
      
      // „É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å∏„ÅÆ„É™„ÉÄ„Ç§„É¨„ÇØ„ÉàÁ¢∫Ë™ç
      const url = newPage.url();
      if (!url.includes('/auth/signin')) {
        throw new Error(`„É≠„Ç∞„Ç§„É≥„Éö„Éº„Ç∏„Å´„É™„ÉÄ„Ç§„É¨„ÇØ„Éà„Åï„Çå„Åæ„Åõ„Çì„Åß„Åó„Åü: ${url}`);
      }
      
      await newContext.close();
    });

  } finally {
    await browser.close();
  }

  // ÁµêÊûú„Çµ„Éû„É™„Éº
  console.log('\n' + '='.repeat(60));
  log('üìä „ÉÜ„Çπ„ÉàÁµêÊûú„Çµ„Éû„É™„Éº', 'cyan');
  console.log('='.repeat(60));
  
  log(`\n‚úÖ ÊàêÂäü: ${results.passed}‰ª∂`, 'green');
  log(`‚ùå Â§±Êïó: ${results.failed}‰ª∂`, 'red');
  log(`üìà ÂêàÊ†ºÁéá: ${((results.passed / (results.passed + results.failed)) * 100).toFixed(1)}%`, 'blue');
  
  if (results.failed > 0) {
    log('\n‚ùå Â§±Êïó„Åó„Åü„ÉÜ„Çπ„Éà:', 'red');
    results.tests.filter(t => t.status === 'failed').forEach(test => {
      log(`  - ${test.name}: ${test.error}`, 'red');
    });
  }

  if (results.failed === 0) {
    log('\nüéâ „Åô„Åπ„Å¶„ÅÆ„ÉÜ„Çπ„Éà„ÅåÊàêÂäü„Åó„Åæ„Åó„ÅüÔºÅ', 'green');
  }

  process.exit(results.failed > 0 ? 1 : 0);
}

main().catch(error => {
  log(`\n‚ùå „Ç®„É©„Éº: ${error.message}`, 'red');
  console.error(error);
  process.exit(1);
});