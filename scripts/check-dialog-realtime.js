const puppeteer = require('puppeteer');

async function checkDialog() {
  console.log('üîç „ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅÆÂãï‰ΩúÁ¢∫Ë™ç„ÇíÈñãÂßã...\n');
  
  const browser = await puppeteer.launch({
    headless: false, // „Éñ„É©„Ç¶„Ç∂„ÇíË°®Á§∫
    devtools: true,  // DevTools„ÇíÈñã„Åè
    args: ['--no-sandbox', '--disable-setuid-sandbox'],
    slowMo: 100 // Âãï‰Ωú„ÇíÈÅÖ„Åè„Åó„Å¶Á¢∫Ë™ç„Åó„ÇÑ„Åô„Åè„Åô„Çã
  });
  
  try {
    const page = await browser.newPage();
    
    // „Ç≥„É≥„ÇΩ„Éº„É´„É≠„Ç∞„ÇíÁõ£Ë¶ñ
    page.on('console', msg => {
      console.log(`[Console ${msg.type()}]: ${msg.text()}`);
    });
    
    // „Ç®„É©„Éº„ÇíÁõ£Ë¶ñ
    page.on('pageerror', error => {
      console.error(`[Page Error]: ${error.message}`);
    });
    
    console.log('1. „ÉÜ„Çπ„Éà„Éö„Éº„Ç∏„Å´„Ç¢„ÇØ„Çª„Çπ...');
    await page.goto('http://localhost:3000/test-password-dialog', {
      waitUntil: 'networkidle0',
      timeout: 30000
    });
    
    // „Éö„Éº„Ç∏„ÅåË™≠„ÅøËæº„Åæ„Çå„Çã„Åæ„ÅßÂæÖÊ©ü
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    console.log('2. „Éú„Çø„É≥„ÇíÊé¢„Åô...');
    // „Éú„Çø„É≥„ÅåÂ≠òÂú®„Åô„Çã„ÅãÁ¢∫Ë™ç
    const buttonExists = await page.evaluate(() => {
      const button = document.querySelector('button');
      console.log('Found buttons:', document.querySelectorAll('button').length);
      return button !== null;
    });
    
    console.log(`„Éú„Çø„É≥„ÅåÂ≠òÂú®: ${buttonExists}`);
    
    if (!buttonExists) {
      console.error('‚ùå „Éú„Çø„É≥„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì');
      return;
    }
    
    console.log('3. „Éë„Çπ„ÉØ„Éº„ÉâÂ§âÊõ¥„ÉÄ„Ç§„Ç¢„É≠„Ç∞„Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ...');
    // „Éú„Çø„É≥„Çí„ÇØ„É™„ÉÉ„ÇØ
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const targetButton = buttons.find(btn => btn.textContent.includes('„Éë„Çπ„ÉØ„Éº„ÉâÂ§âÊõ¥„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÈñã„Åè'));
      if (targetButton) {
        console.log('Clicking button:', targetButton.textContent);
        targetButton.click();
      } else {
        console.error('Target button not found');
      }
    });
    
    // „ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅåË°®Á§∫„Åï„Çå„Çã„Åæ„ÅßÂæÖÊ©ü
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    console.log('4. „ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç...');
    const dialogInfo = await page.evaluate(() => {
      // MUI„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÇíÊé¢„Åô
      const dialog = document.querySelector('[role="dialog"]');
      const backdrop = document.querySelector('.MuiBackdrop-root');
      const dialogTitle = document.querySelector('h6');
      const passwordInputs = document.querySelectorAll('input[type="password"]');
      
      return {
        hasDialog: dialog !== null,
        hasBackdrop: backdrop !== null,
        dialogDisplay: dialog ? window.getComputedStyle(dialog).display : 'none',
        dialogVisibility: dialog ? window.getComputedStyle(dialog).visibility : 'hidden',
        dialogTitle: dialogTitle ? dialogTitle.textContent : null,
        passwordInputCount: passwordInputs.length,
        dialogHTML: dialog ? dialog.outerHTML.substring(0, 200) : null
      };
    });
    
    console.log('\n=== „ÉÄ„Ç§„Ç¢„É≠„Ç∞Áä∂ÊÖã ===');
    console.log('DialogÂ≠òÂú®:', dialogInfo.hasDialog);
    console.log('BackdropÂ≠òÂú®:', dialogInfo.hasBackdrop);
    console.log('Display:', dialogInfo.dialogDisplay);
    console.log('Visibility:', dialogInfo.dialogVisibility);
    console.log('„Çø„Ç§„Éà„É´:', dialogInfo.dialogTitle);
    console.log('„Éë„Çπ„ÉØ„Éº„ÉâÂÖ•Âäõ„Éï„Ç£„Éº„É´„ÉâÊï∞:', dialogInfo.passwordInputCount);
    console.log('Dialog HTML (ÂÖàÈ†≠200ÊñáÂ≠ó):', dialogInfo.dialogHTML);
    
    // DOMÂÖ®‰Ωì„ÅÆÁä∂ÊÖã„ÇíÁ¢∫Ë™ç
    const domInfo = await page.evaluate(() => {
      const allDialogs = document.querySelectorAll('[role="dialog"]');
      const allModals = document.querySelectorAll('.MuiModal-root');
      const allBackdrops = document.querySelectorAll('.MuiBackdrop-root');
      
      return {
        dialogCount: allDialogs.length,
        modalCount: allModals.length,
        backdropCount: allBackdrops.length,
        bodyChildren: document.body.children.length,
        bodyHTML: document.body.innerHTML.substring(0, 500)
      };
    });
    
    console.log('\n=== DOMÁä∂ÊÖã ===');
    console.log('DialogË¶ÅÁ¥†Êï∞:', domInfo.dialogCount);
    console.log('ModalË¶ÅÁ¥†Êï∞:', domInfo.modalCount);
    console.log('BackdropË¶ÅÁ¥†Êï∞:', domInfo.backdropCount);
    console.log('BodyÁõ¥‰∏ã„ÅÆË¶ÅÁ¥†Êï∞:', domInfo.bodyChildren);
    
    console.log('\n10ÁßíÈñì„Éñ„É©„Ç¶„Ç∂„ÇíÈñã„ÅÑ„Åü„Åæ„Åæ„Å´„Åó„Åæ„Åô„ÄÇÊâãÂãï„ÅßÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ...');
    await new Promise(resolve => setTimeout(resolve, 10000));
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
    console.error(error.stack);
  } finally {
    await browser.close();
  }
}

checkDialog().catch(console.error);