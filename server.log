
> my-board-app@0.1.0 predev
> npm run kill-port


> my-board-app@0.1.0 kill-port
> lsof -ti:3000 | xargs kill -9 2>/dev/null || echo 'Port 3000 is free'


> my-board-app@0.1.0 dev
> node server.js

> Ready on http://localhost:3000
> Socket.io support enabled
 ✓ Compiled /middleware in 405ms (255 modules)
 ○ Compiling / ...
 ✓ Compiled / in 1987ms (1622 modules)
 GET / 200 in 2561ms
 GET / 200 in 47ms
🍪 [Middleware Auth Debug] クッキーヘッダー: null
🔍 [Middleware] 認証ページアクセス: {
  pathname: '/auth/signin',
  hasToken: false,
  tokenId: undefined,
  emailVerified: undefined,
  callbackUrl: null,
  timestamp: '2025-08-23T13:45:29.933Z'
}
 ○ Compiling /auth/signin ...
 ✓ Compiled /auth/signin in 1080ms (1651 modules)
 GET /auth/signin 200 in 1320ms
 ○ Compiling /api/performance ...
 ✓ Compiled /api/performance in 1639ms (2036 modules)
 POST /api/performance 201 in 1969ms
 GET /api/csrf 200 in 1984ms
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
 GET /api/auth/session 200 in 2396ms
 GET /api/auth/providers 200 in 384ms
🌐 [Redirect callback v4]: { url: 'http://localhost:3000', baseUrl: 'http://localhost:3000' }
🔄 [Server Redirect] same origin URL: http://localhost:3000
 GET /api/auth/csrf 200 in 11ms
🌐 [Redirect callback v4]: { url: '/dashboard', baseUrl: 'http://localhost:3000' }
🔄 [Server Redirect] relative URL to full URL: http://localhost:3000/dashboard
🔐 [Auth v4] 認証開始: {
  email: 'test@example.com',
  hasPassword: true,
  timestamp: '2025-08-23T13:45:34.087Z'
}
🔄 MongoDB: 接続を初期化中...
🔍 [MongoDB Debug]: {
  uri: 'mongodb+srv://***@cluster0.ej6jq5c.mongodb.net/boardDB?retryWrites=true&w=majority',
  environment: 'development',
  hasMongodbUri: true,
  hasProductionUri: false
}
✅ MongoDB: 接続成功
📊 [MongoDB Info]: {
  database: 'boardDB',
  host: 'ac-hg4glvr-shard-00-02.ej6jq5c.mongodb.net',
  readyState: 1
}
✅ [Auth v4] DB接続成功
🔍 [Auth v4] ユーザー検索結果: {
  found: true,
  email: 'test@example.com',
  hasPassword: true,
  emailVerified: true
}
🔑 [Auth v4] パスワード検証開始 {
  inputPassword: 'Test1234!',
  storedHashLength: 60,
  hashPrefix: '$2b$12$'
}
🔐 [Auth v4] パスワード検証結果: false
🔐 [Auth v4] comparePasswordメソッド結果: false
❌ [Auth v4] パスワードが一致しません
 POST /api/auth/callback/credentials 401 in 1441ms
 ○ Compiling /api/auth/check-verification ...
 ✓ Compiled /api/auth/check-verification in 688ms (2038 modules)
✅ MongoDB: 既存の接続を使用
 POST /api/auth/check-verification 200 in 779ms
 ✓ Compiled in 356ms (700 modules)
 GET / 200 in 205ms
 GET / 200 in 44ms
🍪 [Middleware Auth Debug] クッキーヘッダー: null
🔍 [Middleware] 認証ページアクセス: {
  pathname: '/auth/signin',
  hasToken: false,
  tokenId: undefined,
  emailVerified: undefined,
  callbackUrl: null,
  timestamp: '2025-08-23T13:48:03.112Z'
}
 GET /auth/signin 200 in 78ms
 GET /api/csrf 200 in 54ms
 POST /api/performance 201 in 78ms
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
 GET /api/auth/session 200 in 124ms
 GET /api/auth/providers 200 in 10ms
🌐 [Redirect callback v4]: { url: 'http://localhost:3000', baseUrl: 'http://localhost:3000' }
🔄 [Server Redirect] same origin URL: http://localhost:3000
 GET /api/auth/csrf 200 in 9ms
🌐 [Redirect callback v4]: { url: '/dashboard', baseUrl: 'http://localhost:3000' }
🔄 [Server Redirect] relative URL to full URL: http://localhost:3000/dashboard
🔐 [Auth v4] 認証開始: {
  email: 'test@example.com',
  hasPassword: true,
  timestamp: '2025-08-23T13:48:03.762Z'
}
✅ MongoDB: 既存の接続を使用
✅ [Auth v4] DB接続成功
🔍 [Auth v4] ユーザー検索結果: {
  found: true,
  email: 'test@example.com',
  hasPassword: true,
  emailVerified: true
}
🔑 [Auth v4] パスワード検証開始 {
  inputPassword: 'Test1234!',
  storedHashLength: 60,
  hashPrefix: '$2b$12$'
}
🔐 [Auth v4] パスワード検証結果: true
🔐 [Auth v4] comparePasswordメソッド結果: true
✅ [Auth v4] 認証成功: test@example.com
📅 [Auth v4] createdAt詳細: {
  email: 'test@example.com',
  hasCreatedAt: true,
  createdAtString: '2025-08-23T13:47:20.409Z'
}
🔍 [signIn callback v4]: {
  user: 'test@example.com',
  emailVerified: true,
  account: 'credentials'
}
🎫 [JWT v4]: {
  hasUser: true,
  hasToken: true,
  userId: '68a9c6689177b8397cac1f6c',
  tokenId: undefined
}
🎉 [Auth v4] signIn event: { user: 'test@example.com', account: 'credentials' }
 POST /api/auth/callback/credentials 200 in 774ms
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
 GET /api/auth/session 200 in 13ms
🔍 Middleware: 保護されたパス: /dashboard
🍪 [Middleware Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..hvw2wg-o4HRx-EDK.SDft-quH3QZCxV40kDEoHkmZPpr3_x_KFEZKBCzlmtjbdWnPZIdb-_6-9WY_Y5ykZhwfzwO0gxm87NNnmZ1L0NidlmktGFaIRCz8pSQhXnbXD3GNKSqz5xbeGsKdS1lyodNuJzFzho2Kj89VHt_qzq607PLlPW3PijMrmjyKWcVmudrK-UHQ8mEBYxi5BzHBrm18ESZr5MmxhMMdPOIhCfxY4Z9sN_RR-MYe9vqws6OZ9GTdtRJDjezEjd6iS7YvK2paGUcDgniRkIhoXnr-WQXkgr0WUKRR9gNw9LLazvDey2InINZyS4Asok3JrVqR9_9wV57y4F6IrSLpPdspt9mnP8wJLXzxCQ.7GymOEO5xusyw5k8YfNMqw
🎫 Middleware: トークン状態: {
  exists: true,
  id: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  pathname: '/dashboard',
  timestamp: '2025-08-23T13:48:04.561Z'
}
🔍 Middleware: 保護されたパス: /dashboard
🍪 [Middleware Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..hvw2wg-o4HRx-EDK.SDft-quH3QZCxV40kDEoHkmZPpr3_x_KFEZKBCzlmtjbdWnPZIdb-_6-9WY_Y5ykZhwfzwO0gxm87NNnmZ1L0NidlmktGFaIRCz8pSQhXnbXD3GNKSqz5xbeGsKdS1lyodNuJzFzho2Kj89VHt_qzq607PLlPW3PijMrmjyKWcVmudrK-UHQ8mEBYxi5BzHBrm18ESZr5MmxhMMdPOIhCfxY4Z9sN_RR-MYe9vqws6OZ9GTdtRJDjezEjd6iS7YvK2paGUcDgniRkIhoXnr-WQXkgr0WUKRR9gNw9LLazvDey2InINZyS4Asok3JrVqR9_9wV57y4F6IrSLpPdspt9mnP8wJLXzxCQ.7GymOEO5xusyw5k8YfNMqw
🔍 Middleware: 保護されたパス: /dashboard
🍪 [Middleware Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..hvw2wg-o4HRx-EDK.SDft-quH3QZCxV40kDEoHkmZPpr3_x_KFEZKBCzlmtjbdWnPZIdb-_6-9WY_Y5ykZhwfzwO0gxm87NNnmZ1L0NidlmktGFaIRCz8pSQhXnbXD3GNKSqz5xbeGsKdS1lyodNuJzFzho2Kj89VHt_qzq607PLlPW3PijMrmjyKWcVmudrK-UHQ8mEBYxi5BzHBrm18ESZr5MmxhMMdPOIhCfxY4Z9sN_RR-MYe9vqws6OZ9GTdtRJDjezEjd6iS7YvK2paGUcDgniRkIhoXnr-WQXkgr0WUKRR9gNw9LLazvDey2InINZyS4Asok3JrVqR9_9wV57y4F6IrSLpPdspt9mnP8wJLXzxCQ.7GymOEO5xusyw5k8YfNMqw
🎫 Middleware: トークン状態: {
  exists: true,
  id: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  pathname: '/dashboard',
  timestamp: '2025-08-23T13:48:04.580Z'
}
🎫 Middleware: トークン状態: {
  exists: true,
  id: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  pathname: '/dashboard',
  timestamp: '2025-08-23T13:48:04.581Z'
}
 ○ Compiling /api/profile ...
🔍 Middleware: 保護されたパス: /board
🍪 [Middleware Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..hvw2wg-o4HRx-EDK.SDft-quH3QZCxV40kDEoHkmZPpr3_x_KFEZKBCzlmtjbdWnPZIdb-_6-9WY_Y5ykZhwfzwO0gxm87NNnmZ1L0NidlmktGFaIRCz8pSQhXnbXD3GNKSqz5xbeGsKdS1lyodNuJzFzho2Kj89VHt_qzq607PLlPW3PijMrmjyKWcVmudrK-UHQ8mEBYxi5BzHBrm18ESZr5MmxhMMdPOIhCfxY4Z9sN_RR-MYe9vqws6OZ9GTdtRJDjezEjd6iS7YvK2paGUcDgniRkIhoXnr-WQXkgr0WUKRR9gNw9LLazvDey2InINZyS4Asok3JrVqR9_9wV57y4F6IrSLpPdspt9mnP8wJLXzxCQ.7GymOEO5xusyw5k8YfNMqw
🎫 Middleware: トークン状態: {
  exists: true,
  id: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  pathname: '/board',
  timestamp: '2025-08-23T13:48:06.906Z'
}
 ✓ Compiled /board in 4.5s (3861 modules)
🔐 [API Security] メール確認済みセッションチェック開始
🔓 [API Security] オプショナル認証チェック開始
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🔍 [API Security] セッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:09.261Z'
}
✅ [API Security] 認証成功: test@example.com
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] オプショナルセッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true
}
Received `true` for a non-boolean attribute `button`.

If you want to write it to the DOM, pass a string instead: button="true" or button={value.toString()}.
 GET /api/profile 200 in 5037ms
 GET /api/user/permissions 200 in 5046ms
 GET /dashboard 200 in 5063ms
🛡️ [Server] ダッシュボード サーバーサイド認証チェック開始
🛡️ [Server] ダッシュボード サーバーサイド認証チェック開始
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [Server] セッション状態: {
  hasSession: true,
  userId: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:09.683Z'
}
✅ [Server] ダッシュボード サーバーサイド認証成功
🔍 [Server] セッション状態: {
  hasSession: true,
  userId: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:09.683Z'
}
✅ [Server] ダッシュボード サーバーサイド認証成功
 GET /board 200 in 2807ms
 GET /api/csrf 200 in 37ms
 POST /api/performance 201 in 68ms
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
 GET /api/auth/session 200 in 53ms
🍪 [Middleware API Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..OFrFDti-Uu68n8wW.ympfhQs2EECnZ0VPhB3Kaj35NN29_DezPXpDxf9eaILVsDdLnlqOzxD3pJejAjb-JZ_GM3mYE1JJRRUXMibV3ybMeXZ9TUdIqhB6fl5hqVGabslj75B8bJfqHp0yhQm66ZyLCIL92fcmcK3vuVsyhyKzeCHksTQQiqkV047uBKqM7icvJypRdURQaMe6S4PCsmvgABg6qvwu_9ja7Eoj7fbV9YxZnv74pSO1tdMsCWGQTz3-9wtsIc7PYCofultz263XzmDgv4wlDfV5M3L8FEK_mtcUJGWjIWw8dgwQoTKbscnTEgXTxT7gWGgKcLkJFQ-Fjs1KaFC-Sd52kaLBW64_fOvs-8GkDw.Ow0CZtg3v8cB3oQV9AygKQ
🔍 [Middleware API] 認証チェック: {
  pathname: '/api/posts',
  hasToken: true,
  userId: '68a9c6689177b8397cac1f6c',
  emailVerified: true,
  environment: 'development',
  hasAuthSecret: true,
  hasNextAuthSecret: true
}
 ○ Compiling /api/posts ...
 ✓ Compiled /api/posts in 1407ms (3978 modules)
🔐 [API Security] メール確認済みセッションチェック開始
🔓 [API Security] オプショナル認証チェック開始
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🔍 [API] 認証トークン確認: {
  hasToken: false,
  userId: undefined,
  email: undefined,
  emailVerified: undefined,
  tokenKeys: [],
  environment: 'development',
  hasAuthSecret: true,
  hasNextAuthSecret: true
}
 GET /api/posts?page=1&limit=10&sort=-createdAt 401 in 1587ms
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🔍 [API Security] セッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:12.167Z'
}
✅ [API Security] 認証成功: test@example.com
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] オプショナルセッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true
}
 GET /api/profile 200 in 1614ms
🔍 Middleware: 保護されたパス: /posts/new
🍪 [Middleware Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..OFrFDti-Uu68n8wW.ympfhQs2EECnZ0VPhB3Kaj35NN29_DezPXpDxf9eaILVsDdLnlqOzxD3pJejAjb-JZ_GM3mYE1JJRRUXMibV3ybMeXZ9TUdIqhB6fl5hqVGabslj75B8bJfqHp0yhQm66ZyLCIL92fcmcK3vuVsyhyKzeCHksTQQiqkV047uBKqM7icvJypRdURQaMe6S4PCsmvgABg6qvwu_9ja7Eoj7fbV9YxZnv74pSO1tdMsCWGQTz3-9wtsIc7PYCofultz263XzmDgv4wlDfV5M3L8FEK_mtcUJGWjIWw8dgwQoTKbscnTEgXTxT7gWGgKcLkJFQ-Fjs1KaFC-Sd52kaLBW64_fOvs-8GkDw.Ow0CZtg3v8cB3oQV9AygKQ
🎫 Middleware: トークン状態: {
  exists: true,
  id: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  pathname: '/posts/new',
  timestamp: '2025-08-23T13:48:12.325Z'
}
 GET /api/user/permissions 200 in 1774ms
 ○ Compiling /posts/new ...
 ✓ Compiled /posts/new in 1075ms (4006 modules)
🛡️ [Server] 投稿作成 サーバーサイド認証チェック開始
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [Server] セッション状態: {
  hasSession: true,
  userId: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:13.645Z'
}
✅ [Server] 投稿作成 サーバーサイド認証成功
 GET /posts/new 200 in 1353ms
 GET /api/csrf 200 in 129ms
 POST /api/performance 201 in 149ms
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
 GET /api/auth/session 200 in 140ms
🔓 [API Security] オプショナル認証チェック開始
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] オプショナルセッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true
}
🔐 [API Security] メール確認済みセッションチェック開始
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] セッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:14.760Z'
}
✅ [API Security] 認証成功: test@example.com
 GET /api/user/permissions 200 in 68ms
 GET /api/profile 200 in 69ms
 ○ Compiling /my-posts ...
 ✓ Compiled /my-posts in 1737ms (4045 modules)
 GET /my-posts 200 in 2014ms
 GET /api/csrf 200 in 30ms
 POST /api/performance 201 in 108ms
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
 GET /api/auth/session 200 in 112ms
🍪 [Middleware API Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..zqfZIBEcHWvBipEC.SHVwxcrlYCcE5JmNBMnA-Cr308iRUF1Kz5YcI9fXOGTLLaEfbbjzTlulgetDiWwcJ8ea79poq2pAEDsoVWIqgVz-S__LGGeq-XoGgbFteObPRZz5sSaRN0iySxAqP88bKmmfKR9JFwnT-NAwRSVr7sGL5xHuhsDIW60bGAJDPoAwW6DZ6mN50iWBxQ-3ztRsjUuXhGXcwy94RTj7nqVKkZNNDDwVd3baAUy4JXVIO6Uj9fdZd4D3P7w2RyL0M_P6mEJ-53xDdTBNtp70gLoKvt3UFTGGsVzJrsAdfBcC4GQkP7-qrkn4o-iXFYbiLBbTs77cyalqMwPJhF3ZNQUg3q5B9avlNN1BYg.7AO__34eGJHjWr4lXRSYkw
🔍 [Middleware API] 認証チェック: {
  pathname: '/api/posts/my-posts',
  hasToken: true,
  userId: '68a9c6689177b8397cac1f6c',
  emailVerified: true,
  environment: 'development',
  hasAuthSecret: true,
  hasNextAuthSecret: true
}
 ○ Compiling /api/posts/my-posts ...
🔍 Middleware: 保護されたパス: /posts/000000000000000000000000/edit
🍪 [Middleware Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..zqfZIBEcHWvBipEC.SHVwxcrlYCcE5JmNBMnA-Cr308iRUF1Kz5YcI9fXOGTLLaEfbbjzTlulgetDiWwcJ8ea79poq2pAEDsoVWIqgVz-S__LGGeq-XoGgbFteObPRZz5sSaRN0iySxAqP88bKmmfKR9JFwnT-NAwRSVr7sGL5xHuhsDIW60bGAJDPoAwW6DZ6mN50iWBxQ-3ztRsjUuXhGXcwy94RTj7nqVKkZNNDDwVd3baAUy4JXVIO6Uj9fdZd4D3P7w2RyL0M_P6mEJ-53xDdTBNtp70gLoKvt3UFTGGsVzJrsAdfBcC4GQkP7-qrkn4o-iXFYbiLBbTs77cyalqMwPJhF3ZNQUg3q5B9avlNN1BYg.7AO__34eGJHjWr4lXRSYkw
🎫 Middleware: トークン状態: {
  exists: true,
  id: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  pathname: '/posts/000000000000000000000000/edit',
  timestamp: '2025-08-23T13:48:20.608Z'
}
 ✓ Compiled /api/posts/my-posts in 1959ms (4047 modules)
🔐 [API Security] メール確認済みセッションチェック開始
🔓 [API Security] オプショナル認証チェック開始
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] セッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:20.688Z'
}
✅ [API Security] 認証成功: test@example.com
🔍 [API Security] オプショナルセッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true
}
🔍 [API] /my-posts 認証トークン確認: {
  hasToken: false,
  userId: undefined,
  email: undefined,
  emailVerified: undefined
}
 GET /api/posts/my-posts 401 in 2056ms
 GET /api/profile 200 in 2085ms
 GET /api/user/permissions 200 in 2089ms
 ○ Compiling /posts/[id]/edit ...
 ✓ Compiled /posts/[id]/edit in 1418ms (4063 modules)
Error: Route "/posts/[id]/edit" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at EditPostLayout (webpack-internal:///(rsc)/./src/app/posts/[id]/edit/layout.tsx:23:62)
🛡️ [Server] 投稿編集 サーバーサイド認証チェック開始: 000000000000000000000000
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
Error: Route "/posts/[id]/edit" used `params.id`. `params` should be awaited before using its properties. Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis
    at EditPostLayout (webpack-internal:///(rsc)/./src/app/posts/[id]/edit/layout.tsx:32:28)
🔍 [Server] セッション状態: {
  hasSession: true,
  userId: '68a9c6689177b8397cac1f6c',
  email: 'test@example.com',
  emailVerified: true,
  postId: '000000000000000000000000',
  timestamp: '2025-08-23T13:48:23.170Z'
}
✅ [Server] 投稿編集 サーバーサイド認証成功
 GET /posts/000000000000000000000000/edit 200 in 2699ms
 GET /api/csrf 200 in 32ms
 POST /api/performance 201 in 54ms
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
 GET /api/auth/session 200 in 62ms
🍪 [Middleware API Debug] クッキーヘッダー: csrf-token-public=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; csrf-token=82d0add7757674cce15996974dba0997d4833b2114d4d6283fc7b33020fb3e9b; next-auth.csrf-token=8ee500328d0699f6d319d35c756fad48686ea8a1cf9ea041a4daae4d82ff172a%7C0bbdd981b72420f37323db62782e167f9131dbec49128fad167a4ae8d0d4adaf; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fdashboard; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..W-vdIy3Vuc_kZf87.N0BrBkUSJ3gc2lAt05j6_3frL8Jh1ujn8jDJmYmws6vIXcEbDzFFxTrblfou5DeI5XKqjptAO8RdzQ_2mmLBPMLwJE5ZJJQIqzAGrGH6lJxFOn2awFVM8gpqKuYZhpGQ4Lq82zkQAlHS11JlqXHoifCCYDvZ1KC_5Dwptqi1kvcI0073YiGgq8Uh0R5Hrp0PBj_TR3RZwdrH3tbaYRuPJSFKbnJeK9dRu4EFs56V-9PWfe8E6_G-zgpwYQ1-9HFEqd0aMVTE_WhpOUQPLOzxqf0IOcR_3wTLw9k9_jsWeaVF4fgHfye5WdAiZQWi1M1-aHMeQdAb55PFoXow19KqSTap2qsRLsJ4bg.pGIa1BcIiAO2Aw4YNInknA
🔍 [Middleware API] 認証チェック: {
  pathname: '/api/posts/000000000000000000000000',
  hasToken: true,
  userId: '68a9c6689177b8397cac1f6c',
  emailVerified: true,
  environment: 'development',
  hasAuthSecret: true,
  hasNextAuthSecret: true
}
🔓 [API Security] オプショナル認証チェック開始
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] オプショナルセッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true
}
 GET /api/user/permissions 200 in 74ms
 ○ Compiling /api/posts/[id] ...
 ✓ Compiled /api/posts/[id] in 1558ms (4065 modules)
🔐 [API Security] メール確認済みセッションチェック開始
[next-auth][warn][DEBUG_ENABLED] 
https://next-auth.js.org/warnings#debug_enabled
🌐 [Redirect callback v4]: {
  url: 'http://localhost:3000/dashboard',
  baseUrl: 'http://localhost:3000'
}
🔄 [Server Redirect] same origin URL: http://localhost:3000/dashboard
🎫 [JWT v4]: {
  hasUser: false,
  hasToken: true,
  userId: undefined,
  tokenId: '68a9c6689177b8397cac1f6c'
}
📊 [Session v4]: {
  hasSession: true,
  hasToken: true,
  tokenId: '68a9c6689177b8397cac1f6c',
  emailVerified: true
}
🔍 [API Security] セッション状態: {
  hasSession: true,
  hasUser: true,
  email: 'test@example.com',
  emailVerified: true,
  timestamp: '2025-08-23T13:48:25.566Z'
}
✅ [API Security] 認証成功: test@example.com
 GET /api/profile 200 in 1712ms
 GET /api/posts/000000000000000000000000 200 in 2010ms
 ✓ Compiled in 564ms (1599 modules)
 ✓ Compiled in 627ms (2520 modules)
